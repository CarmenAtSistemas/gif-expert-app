{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAmB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEJ,mCACD,EACRC,EAJa,iDAIoCC,UAAUH,GAJ9C,kBAGL,EAHK,oBAEJ,oCAFI,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAMCA,EAAKC,OANN,uBAMZC,EANY,EAMZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IACzB,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,MAAOA,MAAOF,EAAIE,QAC9C,4BAAIF,EAAIE,YCFPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDbwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SACShB,IAERoB,GAAW,mBAAGJ,UAAU,mCAAb,kCACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,aEQ/BgB,EArBM,WAEjB,MAAoCzC,mBAAS,CAAC,oBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACA,+CACA,uBACA,cAAC,EAAD,CAAkBA,cAAiBA,IACnC,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GAAG,OACf,cAAC,EAAD,CAAoB7B,SAAU6B,GAAfA,Y,MCXlCC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33107d5f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AgregarCategoria = ({setCategories}) => {\r\n   \r\n    const [inputValue, setInputValue] = useState('');\r\n   \r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputValue } \r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAgregarCategoria.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n        \r\n    const apiKey = 'mAg5joEoBzSe3E2wiLO9SvftDh3bBLcg';\r\n    const limit = 5;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${ limit }&api_key=${ apiKey }`;\r\n    const resp = await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={img.title} title={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">\r\n                    {category}\r\n            </h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando im√°genes</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => \r\n                        <GifGridItem key={img.id} img={img}/>    \r\n                    )\r\n                } \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }));\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport {AgregarCategoria} from \"./components/AgregarCategoria\"\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['ricky and morty'])\r\n\r\n    return(\r\n        <>\r\n        <h2>GiffExpertApp</h2>\r\n        <hr />\r\n        <AgregarCategoria setCategories = {setCategories}/>\r\n        <hr />\r\n        <ul>\r\n            {\r\n                categories.map(cat => \r\n                   <GifGrid  key={cat} category={cat}/>\r\n                )\r\n            }\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}